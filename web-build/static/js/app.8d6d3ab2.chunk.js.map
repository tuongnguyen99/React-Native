{"version":3,"sources":["app/assets/jacket.jpg","app/components/Icon.js","app/config/colors.js","app/components/lists/ListItem.js","app/components/Screen.js","app/screens/ListingDetailsScreen.js","app/components/lists/ListItemDeleteAction.js","app/screens/AccountScreen.js","app/screens/ViewImageSceen.js","app/components/Card.js","app/screens/ListingsScreen.js","app/config/styles.js","app/components/AppTextInput.js","app/components/AppText.js","app/components/PickerItem.js","app/components/AppPicker.js","app/components/forms/AppForm.js","app/components/forms/AppErrorMessage.js","app/components/forms/AppFormField.js","app/components/AppButton.js","app/components/forms/SubmitButton.js","app/screens/LoginScreen.js","app/screens/RegisterScreen.js","app/components/CategoryPickerItem.js","app/components/forms/AppFormPicker.js","app/components/ImageInput.js","app/components/ImageInputList.js","app/components/forms/FormImagePicker.js","app/hooks/useLocation.js","app/screens/ListingEditScreen.js","app/screens/TestScreen.js","App.js","app/assets/chair.jpg","app/assets/couch.jpg","app/assets/logo-red.png","app/assets/tuong.jpg"],"names":["module","exports","Icon","name","size","backgroundColor","iconColor","View","style","width","height","borderRadius","justifyContent","alignItems","MaterialCommunityIcons","color","primary","secondary","black","white","medium","light","dark","danger","StyleSheet","create","container","paddingHorizontal","flexDirection","padding","colors","image","detailsContainer","marginLeft","flex","title","fontWeight","fontSize","subTitle","styles","screen","paddingTop","Platform","OS","StatusBar","currentHeight","Screen","children","SafeAreaView","marginBottom","marginVertical","buttonsContainer","marginHorizontal","marginTop","closeButton","deleteButton","imageContainer","resizeMode","card","margin","overflow","elevation","require","text","fontFamily","icon","AppTextInput","props","defaultStyles","placeholderTextColor","AppText","Text","PickerItem","item","onPress","TouchableOpacity","label","placeholder","AppPicker","items","selectedItem","numberOfColumns","PickerItemComponent","onSelectItem","useState","modalVisible","setModalVisible","Modal","visible","animationType","Button","data","keyExtractor","value","toString","numColumns","renderItem","AppForm","initialValues","onSubmit","validationSchema","AppErrorMessage","error","AppFormField","useFormikContext","setFieldTouched","handleChange","errors","touched","onBlur","onChangeText","button","textTransform","AppButton","SubmitButton","handleSubmit","Yup","shape","email","required","password","min","logo","alignSelf","textAlign","CategoryPickerItem","AppFormPicker","setFieldValue","values","marginRight","ImageInput","imageUri","useEffect","a","async","ImagePicker","granted","alert","requestPermission","mediaTypes","Images","quality","result","cancelled","uri","Image","source","key","ImageInputList","imageUris","onAddImage","onRemoveImage","scrollView","useRef","horizontal","ref","onContentSizeChange","current","scrollToEnd","showsHorizontalScrollIndicator","map","FormImagePicker","includes","filter","imgUri","location","setLocation","Location","coords","latitude","longitude","validationScheme","price","max","category","nullable","description","images","categories","ListingEditScreen","useLocation","JSON","stringify","keyboardType","multiline","numberOfLines","App"],"mappings":"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","file":"static/js/app.8d6d3ab2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jacket.e0e28588.jpg\";","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\"\r\n\r\nfunction Icon({name=\"dots-horizontal\", size=50, backgroundColor=\"#000\", iconColor=\"#fff\"}) {\r\n    return (\r\n        <View style={{\r\n            width:size,\r\n            height: size,\r\n            borderRadius: size/ 2,\r\n            backgroundColor,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <MaterialCommunityIcons name={name} size={size /2} color={iconColor}/>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Icon;","export default {\r\n    primary: \"#fc5c65\",\r\n    secondary: \"#4ecdc4\",\r\n    black: \"#000\",\r\n    white: \"#fff\",\r\n    medium: \"#6e6969\",\r\n    light: \"#f8f4f4\",\r\n    dark: \"#2c2c2c\",\r\n    danger: \"#ff5252\"\r\n}","import React from \"react\";\r\nimport {\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableHighlight,\r\n  View,\r\n} from \"react-native\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport colors from \"../../config/colors\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\n\r\nfunction ListItem({ image, title, subTitle, ImageComponent, showChevrons = false, onPress, renderRightActions }) {\r\n  return (\r\n    <Swipeable renderRightActions={renderRightActions}>\r\n      <TouchableHighlight onPress={onPress} underlayColor={\"#eee\"}>\r\n        <View style={styles.container}>\r\n          {ImageComponent}\r\n          {image && <Image source={image} style={styles.image} resizeMode=\"cover\" />}\r\n          <View style={styles.detailsContainer}>\r\n            <Text style={styles.tilte} numberOfLines={1}>{title}</Text>\r\n            {subTitle && <Text style={styles.subTitle} numberOfLines={2}>{subTitle}</Text>}\r\n          </View>\r\n          {showChevrons && <MaterialCommunityIcons name=\"chevron-right\" color={colors.medium} size={18}/>}\r\n        </View>\r\n      </TouchableHighlight>\r\n    </Swipeable>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 20,\r\n    flexDirection: \"row\",\r\n    padding: 15,\r\n    backgroundColor: colors.white,\r\n    alignItems: \"center\"\r\n  },\r\n  image: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 50,\r\n  },\r\n  detailsContainer: {\r\n    justifyContent: \"center\",\r\n    marginLeft: 10,\r\n    flex: 1\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 16,\r\n  },\r\n  subTitle :{\r\n    color :\"#ddd\",\r\n    fontSize: 14\r\n  }\r\n});\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport { Platform, SafeAreaView, StatusBar, StyleSheet } from 'react-native';\r\n\r\nfunction Screen({children, style}) {\r\n    return (\r\n        <SafeAreaView style={[styles.screen, style]}>\r\n            {children}\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n        flex: 1\r\n    }\r\n})\r\n\r\nexport default Screen;","import React from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport ListItem from \"../components/lists/ListItem\";\r\n\r\nfunction ListingDetailsScreen(props) {\r\n  return (\r\n    <View>\r\n      <Image source={require(\"../assets/jacket.jpg\")} style={styles.image} />\r\n      <View style={styles.detailsContainer}>\r\n        <Text style={styles.title}>Red jacket for sale</Text>\r\n        <Text style={styles.subTitle}>$100</Text>\r\n      </View>\r\n      <ListItem image={require('../assets/tuong.jpg')} title=\"Tuong Nguyen\" subTitle=\"9 Listings\"/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: \"100%\",\r\n    height: 300,\r\n  },\r\n  detailsContainer: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n  },\r\n  subTitle: {\r\n    color: \"coral\",\r\n  },\r\n});\r\n\r\nexport default ListingDetailsScreen;\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport colors from \"../../config/colors\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\n\r\nfunction ListItemDeleteAction({onPress}) {\r\n  return (\r\n    <TouchableWithoutFeedback style={styles.container} onPress={onPress}>\r\n        <MaterialCommunityIcons name=\"delete\" color={colors.white} size={50} />\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.danger,\r\n    width: 70,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default ListItemDeleteAction;\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport Icon from \"../components/Icon\";\r\nimport ListItem from \"../components/lists/ListItem\";\r\nimport Screen from \"../components/Screen\";\r\nimport Separator from \"../components/lists/Separator\";\r\nimport colors from \"../config/colors\";\r\n\r\nconst menuItems = [\r\n  {\r\n    title: \"My listing\",\r\n    icon: {\r\n      name: \"format-list-bulleted\",\r\n      backgroundColor: colors.primary,\r\n    },\r\n  },\r\n  {\r\n    title: \"My Messages\",\r\n    icon: {\r\n      name: \"email\",\r\n      backgroundColor: colors.secondary,\r\n    },\r\n  },\r\n];\r\n\r\nfunction AccountScreen(props) {\r\n  return (\r\n    <Screen style={styles.screen}>\r\n      <View style={styles.container}>\r\n        <ListItem\r\n          title=\"Tuong Nguyen\"\r\n          subTitle=\"nctuong99@gmail.com\"\r\n          image={require(\"../assets/tuong.jpg\")}\r\n        />\r\n      </View>\r\n      <View style={styles.container}>\r\n        <FlatList\r\n          data={menuItems}\r\n          keyExtractor={(menuItem) => {\r\n            return menuItem.title;\r\n          }}\r\n          renderItem={({ item }) => {\r\n            return (\r\n              <ListItem\r\n                title={item.title}\r\n                ImageComponent={\r\n                  <Icon\r\n                    name={item.icon.name}\r\n                    backgroundColor={item.icon.backgroundColor}\r\n                  />\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          ItemSeparatorComponent={Separator}\r\n        />\r\n      </View>\r\n      <ListItem title=\"Log Out\" ImageComponent={<Icon name=\"logout\" backgroundColor=\"#ffe66d\" />}/>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\nscreen:{\r\n    backgroundColor: colors.light\r\n},\r\n  container: {\r\n    marginVertical: 20,\r\n  },\r\n});\r\n\r\nexport default AccountScreen;\r\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { Image, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction ViewImageSceen(props) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.buttonsContainer}>\r\n        <TouchableOpacity style={styles.closeButton} activeOpacity={0.6}>\r\n          <MaterialCommunityIcons name=\"close\" size={40} color={colors.white} />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.deleteButton} activeOpacity={0.6}>\r\n          <MaterialCommunityIcons\r\n            name=\"trash-can-outline\"\r\n            size={40}\r\n            color={colors.white}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.imageContainer}>\r\n        <Image\r\n          source={require(\"../assets/chair.jpg\")}\r\n          style={styles.image}\r\n          resizeMode=\"contain\"\r\n          resizeMethod=\"resize\"\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#000\",\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginHorizontal: 20,\r\n    marginTop: 20,\r\n  },\r\n  closeButton: {\r\n    width: 50,\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  deleteButton: {\r\n    width: 50,\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  imageContainer: { flex: 1 },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n\r\nexport default ViewImageSceen;\r\n","import React from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction Card({ title, subTitle, image }) {\r\n  return (\r\n    <View style={styles.card}>\r\n      <Image style={styles.image} source={image} resizeMode=\"cover\" />\r\n\r\n      <View style={styles.detailsContainer}>\r\n        <Text style={styles.title} numberOfLines={2}>{title}</Text>\r\n        <Text style={styles.subTitle} numberOfLines={1}>{subTitle}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: colors.white,\r\n    margin: 20,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    elevation: 1,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: 200,\r\n  },\r\n  detailsContainer: {\r\n    padding: 10,\r\n  },\r\n  title: {\r\n    marginBottom: 6,\r\n    fontWeight: \"bold\",\r\n  },\r\n  subTitle: {\r\n    color: \"coral\",\r\n  },\r\n});\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport Card from \"../components/Card\";\r\nimport Screen from \"../components/Screen\";\r\nimport colors from \"../config/colors\";\r\n\r\nconst items = [\r\n  {\r\n    _id: 1,\r\n    title: \"red jacket for sale\",\r\n    price: \"$100\",\r\n    image: require(\"../assets/jacket.jpg\"),\r\n  },\r\n  {\r\n    _id: 2,\r\n    title: \"Couch in great condition\",\r\n    price: \"$999\",\r\n    image: require(\"../assets/couch.jpg\"),\r\n  },\r\n];\r\n\r\nfunction ListingsScreen(props) {\r\n  return (\r\n    <Screen style={styles.screen}>\r\n      <FlatList\r\n        data={items}\r\n        keyExtractor={(item) => {\r\n          return item._id.toString();\r\n        }}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <Card title={item.title} subTitle={item.price} image={item.image} />\r\n          );\r\n        }}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        backgroundColor: colors.light\r\n    }\r\n})\r\n\r\nexport default ListingsScreen;\r\n","import { Platform } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nexport default {\r\n    text: {\r\n        fontSize: 18,\r\n        fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\r\n        color: colors.dark,\r\n      }\r\n}\r\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport colors from '../config/colors';\r\nimport defaultStyles from '../config/styles';\r\n\r\nfunction AppTextInput({ icon, width = '100%', ...props }) {\r\n  return (\r\n    <View style={[styles.container, {width}]}>\r\n      {icon && (\r\n        <MaterialCommunityIcons\r\n          name={icon}\r\n          size={20}\r\n          color={colors.medium}\r\n          style={styles.icon}\r\n        />\r\n      )}\r\n      <TextInput style={[defaultStyles.text, { flex: 1 }]} {...props} placeholderTextColor={colors.medium}/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.light,\r\n    borderRadius: 25,\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    marginVertical: 10,\r\n  },\r\n  icon: {\r\n    margin: 10,\r\n  },\r\n});\r\n\r\nexport default AppTextInput;\r\n","import React from 'react';\r\nimport { Text } from 'react-native';\r\nimport defaultStyles from \"../config/styles\";\r\n\r\nfunction AppText({children, style}) {\r\n    return (\r\n        <Text style={[defaultStyles.text, style]}>{children}</Text>\r\n    );\r\n}\r\n\r\nexport default AppText;","import React from 'react';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\nimport AppText from './AppText';\r\n\r\nfunction PickerItem({item, onPress}) {\r\n    return (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <AppText style={styles.text}>{item.label}</AppText>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        padding: 20,\r\n    }\r\n})\r\n\r\nexport default PickerItem;","import { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, StyleSheet, View } from 'react-native';\r\nimport {\r\n  FlatList,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native-gesture-handler';\r\nimport colors from '../config/colors';\r\nimport AppText from './AppText';\r\nimport PickerItem from './PickerItem';\r\n\r\nfunction AppPicker({\r\n  icon,\r\n  items,\r\n  selectedItem,\r\n  numberOfColumns = 1,\r\n  PickerItemComponent = PickerItem,\r\n  placeholder,\r\n  width = '100%',\r\n  onSelectItem,\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <TouchableWithoutFeedback\r\n        onPress={() => {\r\n          setModalVisible(true);\r\n        }}\r\n      >\r\n        <View style={[styles.container, { width }]}>\r\n          {icon && (\r\n            <MaterialCommunityIcons\r\n              name={icon}\r\n              size={20}\r\n              color={colors.medium}\r\n              style={styles.icon}\r\n            />\r\n          )}\r\n\r\n          {selectedItem ? (\r\n            <AppText style={styles.placeholder}>{selectedItem.label}</AppText>\r\n          ) : (\r\n            <AppText style={styles.placeholder}>{placeholder}</AppText>\r\n          )}\r\n\r\n          <MaterialCommunityIcons\r\n            name=\"chevron-down\"\r\n            size={20}\r\n            color={colors.medium}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n      <Modal visible={modalVisible} animationType=\"slide\">\r\n        <Button\r\n          title=\"Close\"\r\n          onPress={() => {\r\n            setModalVisible(false);\r\n          }}\r\n        />\r\n        <FlatList\r\n          data={items}\r\n          keyExtractor={(item) => {\r\n            return item.value.toString();\r\n          }}\r\n          numColumns={numberOfColumns}\r\n          renderItem={({ item }) => {\r\n            return (\r\n              <PickerItemComponent\r\n                item={item}\r\n                onPress={() => {\r\n                  setModalVisible(false);\r\n                  onSelectItem(item);\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.light,\r\n    borderRadius: 25,\r\n    flexDirection: 'row',\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    margin: 10,\r\n  },\r\n  text: {\r\n    flex: 1,\r\n  },\r\n  placeholder: {\r\n    color: colors.medium,\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default AppPicker;\r\n","import { Formik } from \"formik\";\r\nimport React from \"react\";\r\n\r\nfunction AppForm({ initialValues, onSubmit, validationSchema, children }) {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {() => {\r\n        return <>{children}</>;\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default AppForm;\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport AppText from \"../AppText\";\r\n\r\nfunction AppErrorMessage({ error, visible }) {\r\n  if(!visible || !error) return null;\r\n      return <AppText style={styles.text}>{error}</AppText>\r\n \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nexport default AppErrorMessage;\r\n","import { useFormikContext } from \"formik\";\r\nimport React from \"react\";\r\nimport AppErrorMessage from \"./AppErrorMessage\";\r\nimport AppTextInput from \"../AppTextInput\";\r\n\r\n\r\nfunction AppFormField({name, width, ...props}) {\r\n  const {setFieldTouched, handleChange, errors, touched} = useFormikContext();\r\n  return (\r\n    <>\r\n      <AppTextInput\r\n        onBlur={() => {\r\n          setFieldTouched(name);\r\n        }}\r\n        onChangeText={handleChange(name)}\r\n        width={width}\r\n        {...props}\r\n      />\r\n      <AppErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppFormField;\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction AppButton({ title, color, onPress }) {\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.button, { backgroundColor: colors[color] }]}\r\n      onPress={onPress}\r\n    >\r\n\r\n      <Text style={styles.title}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 50,\r\n    width: \"100%\",\r\n    padding: 14,\r\n    marginBottom: 20,\r\n    backgroundColor: \"red\",\r\n  },\r\n  title: {\r\n    color: colors.white,\r\n    textTransform: \"uppercase\",\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default AppButton;\r\n","import React from 'react';\r\nimport {useFormikContext} from 'formik';\r\nimport AppButton from '../AppButton';\r\n\r\nfunction SubmitButton({title}) {\r\n    const {handleSubmit} = useFormikContext();\r\n    return (\r\n        <AppButton title={title} onPress={handleSubmit} color=\"primary\"/>\r\n    );\r\n}\r\n\r\nexport default SubmitButton;","import React from \"react\";\r\nimport { Image, StyleSheet } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\r\nimport Screen from \"../components/Screen\";\r\n\r\nconst validationScheme = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required(\"Vui lòng nhập email\")\r\n    .email(\"Email không hợp lệ\")\r\n    .label(\"Email\"),\r\n  password: Yup.string().required().min(4).label(\"Password\"),\r\n});\r\n\r\nfunction LoginScreen(props) {\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <Image style={styles.logo} source={require(\"../assets/logo-red.png\")} />\r\n      <AppForm\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        onSubmit={(values) => {\r\n          alert(JSON.stringify(values));\r\n        }}\r\n        validationSchema={validationScheme}\r\n      >\r\n        <AppFormField\r\n          name=\"email\"\r\n          icon=\"email\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          placeholder=\"email\"\r\n          keyboardType=\"email-address\"\r\n        />\r\n        <AppFormField\r\n          name=\"password\"\r\n          icon=\"lock\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          placeholder=\"password\"\r\n          secureTextEntry\r\n        />\r\n        <SubmitButton title=\"Login\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 12,\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    alignSelf: \"center\",\r\n    marginTop: 50,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n","import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { AppForm, AppFormField, SubmitButton } from '../components/forms';\r\nimport * as Yup from 'yup';\r\nimport Screen from '../components/Screen';\r\n\r\nconst validationScheme = Yup.object().shape({\r\n  name: Yup.string().min(1).required(),\r\n  email: Yup.string()\r\n    .required('Vui lòng nhập email')\r\n    .email('Email không hợp lệ')\r\n    .label('Email'),\r\n  password: Yup.string().required().min(4).label('Password'),\r\n});\r\n\r\nconst handleSubmit = (values) => {};\r\n\r\nfunction RegisterScreen() {\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <AppForm\r\n        initialValues={{ name: '', email: '', password: '' }}\r\n        validationSchema={validationScheme}\r\n      >\r\n        <AppFormField\r\n          name=\"name\"\r\n          icon=\"account\"\r\n          placeholder=\"Name\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n        <AppFormField\r\n          name=\"email\"\r\n          icon=\"email\"\r\n          placeholder=\"Email\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          keyboardType=\"email-address\"\r\n        />\r\n        <AppFormField\r\n          name=\"password\"\r\n          icon=\"lock\"\r\n          placeholder=\"Password\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          secureTextEntry\r\n        />\r\n        <SubmitButton title=\"register\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n","import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport Icon from './Icon';\r\n\r\nfunction CategoryPickerItem({ item, onPress }) {\r\n  return (\r\n    <TouchableOpacity style={styles.container} onPress={onPress}>\r\n      <Icon backgroundColor={item.backgroundColor} name={item.icon} size={80} />\r\n      <Text style={styles.label}>{item.label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '33%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  label: {\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default CategoryPickerItem;\r\n","import { useFormikContext } from 'formik';\r\nimport React from 'react';\r\nimport AppPicker from '../AppPicker';\r\nimport AppErrorMessage from './AppErrorMessage';\r\n\r\nfunction AppFormPicker({\r\n  items,\r\n  name,\r\n  PickerItemComponent,\r\n  numberOfColumns,\r\n  placeholder,\r\n  width,\r\n}) {\r\n  const { errors, setFieldValue, touched, values } = useFormikContext();\r\n  return (\r\n    <>\r\n      <AppPicker\r\n        items={items}\r\n        onSelectItem={(item) => {\r\n          setFieldValue(name, item);\r\n        }}\r\n        PickerItemComponent={PickerItemComponent}\r\n        numberOfColumns={numberOfColumns}\r\n        placeholder={placeholder}\r\n        selectedItem={values[name]}\r\n        width={width}\r\n      />\r\n      <AppErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppFormPicker;\r\n","import * as ImagePicker from 'expo-image-picker';\r\nimport React, { useEffect } from 'react';\r\nimport { Image, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport Icon from './Icon';\r\n\r\nfunction ImageInput({ imageUri, onPress }) {\r\n  const requestPermission = async () => {\r\n    const { granted } = await ImagePicker.requestCameraPermissionsAsync();\r\n    if (!granted) alert('You need to enable to access your photos');\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestPermission();\r\n  }, []);\r\n\r\n  const handleSelectImage = async () => {\r\n    if (imageUri) return onPress(imageUri);\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        quality: 0.5,\r\n      });\r\n      if (!result.cancelled) onPress(result.uri);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <TouchableOpacity style={styles.container} onPress={handleSelectImage}>\r\n      {imageUri ? (\r\n        <Image source={{ uri: imageUri }} style={styles.image} key={imageUri} />\r\n      ) : (\r\n        <Icon name=\"camera\" backgroundColor=\"transparent\" size={80} />\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#ddd',\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 20,\r\n    marginRight: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n});\r\n\r\nexport default ImageInput;\r\n","import React, { useRef } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport ImageInput from './ImageInput';\r\n\r\nfunction ImageInputList({ imageUris, onAddImage, onRemoveImage }) {\r\n  const scrollView = useRef();\r\n  return (\r\n    <View>\r\n      <ScrollView\r\n        horizontal\r\n        ref={scrollView}\r\n        onContentSizeChange={() => {\r\n          scrollView.current.scrollToEnd();\r\n        }}\r\n        showsHorizontalScrollIndicator={false}\r\n      >\r\n        <View style={styles.container}>\r\n          {imageUris.map((uri) => {\r\n            return (\r\n              <ImageInput imageUri={uri} onPress={onRemoveImage} key={uri} />\r\n            );\r\n          })}\r\n          <ImageInput onPress={onAddImage} />\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n\r\nexport default ImageInputList;\r\n","import { useFormikContext } from 'formik';\r\nimport React from 'react';\r\nimport ImageInputList from '../ImageInputList';\r\nimport AppErrorMessage from './AppErrorMessage';\r\n\r\nfunction FormImagePicker({ name }) {\r\n  const { values, errors, touched, setFieldValue } = useFormikContext();\r\n\r\n  const handleAddImage = (uri) => {\r\n    if (values[name].includes(uri)) return alert('photo is duplicated');\r\n    setFieldValue(name, [...values[name], uri]);\r\n  };\r\n\r\n  const handleRemoveImage = (uri) => {\r\n    setFieldValue(\r\n      name,\r\n      values[name].filter((imgUri) => {\r\n        return imgUri !== uri;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ImageInputList\r\n        imageUris={values[name]}\r\n        onAddImage={handleAddImage}\r\n        onRemoveImage={handleRemoveImage}\r\n      />\r\n      <AppErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormImagePicker;\r\n","import { useEffect, useState } from 'react';\r\nimport * as Location from 'expo-location';\r\n\r\nexport default () => {\r\n  const [location, setLocation] = useState();\r\n\r\n  const requestPermission = async () => {\r\n    const result = await Location.requestPermissionsAsync();\r\n    if (!result.granted) return;\r\n    const {\r\n      coords: { latitude, longitude },\r\n    } = await Location.getCurrentPositionAsync();\r\n    setLocation({ latitude, longitude });\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestPermission();\r\n  }, []);\r\n\r\n  return location;\r\n};\r\n","import * as Location from 'expo-location';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport * as Yup from 'yup';\r\nimport CategoryPickerItem from '../components/CategoryPickerItem';\r\nimport { AppForm, AppFormField, SubmitButton } from '../components/forms';\r\nimport AppFormPicker from '../components/forms/AppFormPicker';\r\nimport FormImagePicker from '../components/forms/FormImagePicker';\r\nimport Screen from '../components/Screen';\r\nimport useLocation from '../hooks/useLocation';\r\nconst validationScheme = Yup.object().shape({\r\n  title: Yup.string().min(1).required(),\r\n  price: Yup.number().min(1).max(10000),\r\n  category: Yup.object().required().nullable(),\r\n  description: Yup.string(),\r\n  images: Yup.array().min(1, 'Please select at least one image'),\r\n});\r\n\r\nconst categories = [\r\n  {\r\n    backgroundColor: '#fc5c65',\r\n    icon: 'floor-lamp',\r\n    label: 'Furniture',\r\n    value: 1,\r\n  },\r\n  {\r\n    backgroundColor: '#fd9644',\r\n    icon: 'car',\r\n    label: 'Cars',\r\n    value: 2,\r\n  },\r\n  {\r\n    backgroundColor: '#fed330',\r\n    icon: 'camera',\r\n    label: 'Cameras',\r\n    value: 3,\r\n  },\r\n  {\r\n    backgroundColor: '#26de81',\r\n    icon: 'cards',\r\n    label: 'Games',\r\n    value: 4,\r\n  },\r\n  {\r\n    backgroundColor: '#2bcbba',\r\n    icon: 'shoe-heel',\r\n    label: 'Clothing',\r\n    value: 5,\r\n  },\r\n  {\r\n    backgroundColor: '#45aaf2',\r\n    icon: 'basketball',\r\n    label: 'Sports',\r\n    value: 6,\r\n  },\r\n  {\r\n    backgroundColor: '#4b7bec',\r\n    icon: 'headphones',\r\n    label: 'Movies & Music',\r\n    value: 7,\r\n  },\r\n  {\r\n    backgroundColor: '#a55eea',\r\n    icon: 'book-open-variant',\r\n    label: 'Books',\r\n    value: 8,\r\n  },\r\n  {\r\n    backgroundColor: '#778ca3',\r\n    icon: 'application',\r\n    label: 'Other',\r\n    value: 9,\r\n  },\r\n];\r\n\r\nfunction ListingEditScreen() {\r\n  const location = useLocation();\r\n\r\n  const handleSubmit = (values) => {\r\n    alert(JSON.stringify(location));\r\n  };\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <AppForm\r\n        initialValues={{\r\n          title: '',\r\n          price: '',\r\n          category: categories[0],\r\n          description: '',\r\n          images: [],\r\n        }}\r\n        validationSchema={validationScheme}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <FormImagePicker name=\"images\" />\r\n        <AppFormField name=\"title\" placeholder=\"Title\" />\r\n        <AppFormField\r\n          name=\"price\"\r\n          placeholder=\"Price\"\r\n          keyboardType=\"numeric\"\r\n          width={120}\r\n        />\r\n        <AppFormPicker\r\n          name=\"category\"\r\n          items={categories}\r\n          placeholder={categories[0].label}\r\n          numberOfColumns={3}\r\n          PickerItemComponent={CategoryPickerItem}\r\n          width={200}\r\n        />\r\n        <AppFormField\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          multiline\r\n          numberOfLines={3}\r\n        />\r\n        <SubmitButton title=\"Post\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 10,\r\n  },\r\n});\r\n\r\nexport default ListingEditScreen;\r\n","import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { AppForm, AppFormField, SubmitButton } from '../components/forms';\r\nimport * as Yup from 'yup';\r\nimport Screen from '../components/Screen';\r\n\r\n// const validationScheme = Yup.object().shape({\r\n//   name: Yup.string().min(1).required(),\r\n// });\r\n\r\nconst validationScheme = Yup.object().shape({\r\n  name: Yup.string().min(1).required()\r\n})\r\n\r\nconst handleSubmit = (values) => {};\r\n\r\nfunction TestScreen() {\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <AppForm\r\n        initialValues={{ name: ''}}\r\n        validationSchema={validationScheme}\r\n      >\r\n        <AppFormField\r\n          name=\"name\"\r\n          icon=\"account\"\r\n          placeholder=\"Name\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n        <SubmitButton title=\"register\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default TestScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Icon from './app/components/Icon';\r\nimport ListItem from './app/components/lists/ListItem';\r\nimport Screen from './app/components/Screen';\r\nimport ListingDetailsScreen from './app/screens/ListingDetailsScreen';\r\nimport MessagesScreen from './app/screens/MessagesScreen';\r\nimport MyAccountScreen from './app/screens/AccountScreen';\r\nimport ViewImageSceen from './app/screens/ViewImageSceen';\r\nimport AccountScreen from './app/screens/AccountScreen';\r\nimport ListingsScreen from './app/screens/ListingsScreen';\r\nimport AppTextInput from './app/components/AppTextInput';\r\nimport AppPicker from './app/components/AppPicker';\r\nimport LoginScreen from './app/screens/LoginScreen';\r\nimport RegisterScreen from './app/screens/RegisterScreen';\r\nimport ListingEditScreen from './app/screens/ListingEditScreen';\r\nimport TestScreen from './app/screens/TestScreen';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Button, Image } from 'react-native';\r\nimport ImageInput from './app/components/ImageInput';\r\nimport ImageInputList from './app/components/ImageInputList';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <ListingEditScreen />\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/chair.72b59f4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/couch.ffe727c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-red.3cd9e5fe.png\";","module.exports = __webpack_public_path__ + \"static/media/tuong.6a0faae0.jpg\";"],"sourceRoot":""}
{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{useFormikContext}from'formik';import React from'react';import ImageInputList from\"../ImageInputList\";import AppErrorMessage from\"./AppErrorMessage\";function FormImagePicker(_ref){var name=_ref.name;var _useFormikContext=useFormikContext(),values=_useFormikContext.values,errors=_useFormikContext.errors,touched=_useFormikContext.touched,setFieldValue=_useFormikContext.setFieldValue;var handleAddImage=function handleAddImage(uri){if(values[name].includes(uri))return alert('photo is duplicated');setFieldValue(name,[].concat(_toConsumableArray(values[name]),[uri]));};var handleRemoveImage=function handleRemoveImage(uri){setFieldValue(name,values[name].filter(function(imgUri){return imgUri!==uri;}));};return React.createElement(React.Fragment,null,React.createElement(ImageInputList,{imageUris:values[name],onAddImage:handleAddImage,onRemoveImage:handleRemoveImage}),React.createElement(AppErrorMessage,{error:errors[name],visible:touched[name]}));}export default FormImagePicker;","map":{"version":3,"sources":["C:/Users/Tuong/Documents/projects/nodejs/react-native/React-Native/app/components/forms/FormImagePicker.js"],"names":["useFormikContext","React","ImageInputList","AppErrorMessage","FormImagePicker","name","values","errors","touched","setFieldValue","handleAddImage","uri","includes","alert","handleRemoveImage","filter","imgUri"],"mappings":"yEAAA,OAASA,gBAAT,KAAiC,QAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,yBACA,MAAOC,CAAAA,eAAP,yBAEA,QAASC,CAAAA,eAAT,MAAmC,IAARC,CAAAA,IAAQ,MAARA,IAAQ,uBACkBL,gBAAgB,EADlC,CACzBM,MADyB,mBACzBA,MADyB,CACjBC,MADiB,mBACjBA,MADiB,CACTC,OADS,mBACTA,OADS,CACAC,aADA,mBACAA,aADA,CAGjC,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,CAAS,CAC9B,GAAIL,MAAM,CAACD,IAAD,CAAN,CAAaO,QAAb,CAAsBD,GAAtB,CAAJ,CAAgC,MAAOE,CAAAA,KAAK,CAAC,qBAAD,CAAZ,CAChCJ,aAAa,CAACJ,IAAD,8BAAWC,MAAM,CAACD,IAAD,CAAjB,GAAyBM,GAAzB,GAAb,CACD,CAHD,CAKA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACH,GAAD,CAAS,CACjCF,aAAa,CACXJ,IADW,CAEXC,MAAM,CAACD,IAAD,CAAN,CAAaU,MAAb,CAAoB,SAACC,MAAD,CAAY,CAC9B,MAAOA,CAAAA,MAAM,GAAKL,GAAlB,CACD,CAFD,CAFW,CAAb,CAMD,CAPD,CASA,MACE,yCACE,oBAAC,cAAD,EACE,SAAS,CAAEL,MAAM,CAACD,IAAD,CADnB,CAEE,UAAU,CAAEK,cAFd,CAGE,aAAa,CAAEI,iBAHjB,EADF,CAME,oBAAC,eAAD,EAAiB,KAAK,CAAEP,MAAM,CAACF,IAAD,CAA9B,CAAsC,OAAO,CAAEG,OAAO,CAACH,IAAD,CAAtD,EANF,CADF,CAUD,CAED,cAAeD,CAAAA,eAAf","sourcesContent":["import { useFormikContext } from 'formik';\r\nimport React from 'react';\r\nimport ImageInputList from '../ImageInputList';\r\nimport AppErrorMessage from './AppErrorMessage';\r\n\r\nfunction FormImagePicker({ name }) {\r\n  const { values, errors, touched, setFieldValue } = useFormikContext();\r\n\r\n  const handleAddImage = (uri) => {\r\n    if (values[name].includes(uri)) return alert('photo is duplicated');\r\n    setFieldValue(name, [...values[name], uri]);\r\n  };\r\n\r\n  const handleRemoveImage = (uri) => {\r\n    setFieldValue(\r\n      name,\r\n      values[name].filter((imgUri) => {\r\n        return imgUri !== uri;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ImageInputList\r\n        imageUris={values[name]}\r\n        onAddImage={handleAddImage}\r\n        onRemoveImage={handleRemoveImage}\r\n      />\r\n      <AppErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormImagePicker;\r\n"]},"metadata":{},"sourceType":"module"}
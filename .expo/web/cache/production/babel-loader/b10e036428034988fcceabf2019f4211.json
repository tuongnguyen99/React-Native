{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{MaterialCommunityIcons}from'@expo/vector-icons';import React,{useState}from'react';import Button from\"react-native-web/dist/exports/Button\";import Modal from\"react-native-web/dist/exports/Modal\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{FlatList,TouchableWithoutFeedback}from'react-native-gesture-handler';import colors from\"../config/colors\";import AppText from\"./AppText\";import PickerItem from\"./PickerItem\";function AppPicker(_ref){var icon=_ref.icon,items=_ref.items,selectedItem=_ref.selectedItem,_ref$numberOfColumns=_ref.numberOfColumns,numberOfColumns=_ref$numberOfColumns===void 0?1:_ref$numberOfColumns,_ref$PickerItemCompon=_ref.PickerItemComponent,PickerItemComponent=_ref$PickerItemCompon===void 0?PickerItem:_ref$PickerItemCompon,placeholder=_ref.placeholder,_ref$width=_ref.width,width=_ref$width===void 0?'100%':_ref$width,onSelectItem=_ref.onSelectItem;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];return React.createElement(React.Fragment,null,React.createElement(TouchableWithoutFeedback,{onPress:function onPress(){setModalVisible(true);}},React.createElement(View,{style:[styles.container,{width:width}]},icon&&React.createElement(MaterialCommunityIcons,{name:icon,size:20,color:colors.medium,style:styles.icon}),selectedItem?React.createElement(AppText,{style:styles.placeholder},selectedItem.label):React.createElement(AppText,{style:styles.placeholder},placeholder),React.createElement(MaterialCommunityIcons,{name:\"chevron-down\",size:20,color:colors.medium}))),React.createElement(Modal,{visible:modalVisible,animationType:\"slide\"},React.createElement(Button,{title:\"Close\",onPress:function onPress(){setModalVisible(false);}}),React.createElement(FlatList,{data:items,keyExtractor:function keyExtractor(item){return item.value.toString();},numColumns:numberOfColumns,renderItem:function renderItem(_ref2){var item=_ref2.item;return React.createElement(PickerItemComponent,{item:item,onPress:function onPress(){setModalVisible(false);onSelectItem(item);}});}})));}var styles=StyleSheet.create({container:{backgroundColor:colors.light,borderRadius:25,flexDirection:'row',padding:15,marginVertical:10,alignItems:'center'},icon:{margin:10},text:{flex:1},placeholder:{color:colors.medium,flex:1}});export default AppPicker;","map":{"version":3,"sources":["C:/Users/Tuong/Documents/projects/nodejs/react-native/React-Native/app/components/AppPicker.js"],"names":["MaterialCommunityIcons","React","useState","FlatList","TouchableWithoutFeedback","colors","AppText","PickerItem","AppPicker","icon","items","selectedItem","numberOfColumns","PickerItemComponent","placeholder","width","onSelectItem","modalVisible","setModalVisible","styles","container","medium","label","item","value","toString","StyleSheet","create","backgroundColor","light","borderRadius","flexDirection","padding","marginVertical","alignItems","margin","text","flex","color"],"mappings":"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","sourcesContent":["import { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, StyleSheet, View } from 'react-native';\r\nimport {\r\n  FlatList,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native-gesture-handler';\r\nimport colors from '../config/colors';\r\nimport AppText from './AppText';\r\nimport PickerItem from './PickerItem';\r\n\r\nfunction AppPicker({\r\n  icon,\r\n  items,\r\n  selectedItem,\r\n  numberOfColumns = 1,\r\n  PickerItemComponent = PickerItem,\r\n  placeholder,\r\n  width = '100%',\r\n  onSelectItem,\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <TouchableWithoutFeedback\r\n        onPress={() => {\r\n          setModalVisible(true);\r\n        }}\r\n      >\r\n        <View style={[styles.container, { width }]}>\r\n          {icon && (\r\n            <MaterialCommunityIcons\r\n              name={icon}\r\n              size={20}\r\n              color={colors.medium}\r\n              style={styles.icon}\r\n            />\r\n          )}\r\n\r\n          {selectedItem ? (\r\n            <AppText style={styles.placeholder}>{selectedItem.label}</AppText>\r\n          ) : (\r\n            <AppText style={styles.placeholder}>{placeholder}</AppText>\r\n          )}\r\n\r\n          <MaterialCommunityIcons\r\n            name=\"chevron-down\"\r\n            size={20}\r\n            color={colors.medium}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n      <Modal visible={modalVisible} animationType=\"slide\">\r\n        <Button\r\n          title=\"Close\"\r\n          onPress={() => {\r\n            setModalVisible(false);\r\n          }}\r\n        />\r\n        <FlatList\r\n          data={items}\r\n          keyExtractor={(item) => {\r\n            return item.value.toString();\r\n          }}\r\n          numColumns={numberOfColumns}\r\n          renderItem={({ item }) => {\r\n            return (\r\n              <PickerItemComponent\r\n                item={item}\r\n                onPress={() => {\r\n                  setModalVisible(false);\r\n                  onSelectItem(item);\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.light,\r\n    borderRadius: 25,\r\n    flexDirection: 'row',\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    margin: 10,\r\n  },\r\n  text: {\r\n    flex: 1,\r\n  },\r\n  placeholder: {\r\n    color: colors.medium,\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default AppPicker;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tuong\\\\Documents\\\\projects\\\\nodejs\\\\react-native\\\\React-Native\\\\app\\\\components\\\\forms\\\\FormImagePicker.js\";\nimport { useFormikContext } from 'formik';\nimport React from 'react';\nimport ImageInputList from \"../ImageInputList\";\nimport AppErrorMessage from \"./AppErrorMessage\";\n\nfunction FormImagePicker(_ref) {\n  var name = _ref.name;\n\n  var _useFormikContext = useFormikContext(),\n      values = _useFormikContext.values,\n      errors = _useFormikContext.errors,\n      touched = _useFormikContext.touched,\n      setFieldValue = _useFormikContext.setFieldValue;\n\n  var handleAddImage = function handleAddImage(uri) {\n    if (values[name].includes(uri)) return alert('photo is duplicated');\n    setFieldValue(name, [].concat(_toConsumableArray(values[name]), [uri]));\n  };\n\n  var handleRemoveImage = function handleRemoveImage(uri) {\n    setFieldValue(name, values[name].filter(function (imgUri) {\n      return imgUri !== uri;\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ImageInputList, {\n    imageUris: values[name],\n    onAddImage: handleAddImage,\n    onRemoveImage: handleRemoveImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(AppErrorMessage, {\n    error: errors[name],\n    visible: touched[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default FormImagePicker;","map":{"version":3,"sources":["C:/Users/Tuong/Documents/projects/nodejs/react-native/React-Native/app/components/forms/FormImagePicker.js"],"names":["useFormikContext","React","ImageInputList","AppErrorMessage","FormImagePicker","name","values","errors","touched","setFieldValue","handleAddImage","uri","includes","alert","handleRemoveImage","filter","imgUri"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP;AACA,OAAOC,eAAP;;AAEA,SAASC,eAAT,OAAmC;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,0BACkBL,gBAAgB,EADlC;AAAA,MACzBM,MADyB,qBACzBA,MADyB;AAAA,MACjBC,MADiB,qBACjBA,MADiB;AAAA,MACTC,OADS,qBACTA,OADS;AAAA,MACAC,aADA,qBACAA,aADA;;AAGjC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAS;AAC9B,QAAIL,MAAM,CAACD,IAAD,CAAN,CAAaO,QAAb,CAAsBD,GAAtB,CAAJ,EAAgC,OAAOE,KAAK,CAAC,qBAAD,CAAZ;AAChCJ,IAAAA,aAAa,CAACJ,IAAD,+BAAWC,MAAM,CAACD,IAAD,CAAjB,IAAyBM,GAAzB,GAAb;AACD,GAHD;;AAKA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,GAAD,EAAS;AACjCF,IAAAA,aAAa,CACXJ,IADW,EAEXC,MAAM,CAACD,IAAD,CAAN,CAAaU,MAAb,CAAoB,UAACC,MAAD,EAAY;AAC9B,aAAOA,MAAM,KAAKL,GAAlB;AACD,KAFD,CAFW,CAAb;AAMD,GAPD;;AASA,SACE,0CACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAEL,MAAM,CAACD,IAAD,CADnB;AAEE,IAAA,UAAU,EAAEK,cAFd;AAGE,IAAA,aAAa,EAAEI,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEP,MAAM,CAACF,IAAD,CAA9B;AAAsC,IAAA,OAAO,EAAEG,OAAO,CAACH,IAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAeD,eAAf","sourcesContent":["import { useFormikContext } from 'formik';\r\nimport React from 'react';\r\nimport ImageInputList from '../ImageInputList';\r\nimport AppErrorMessage from './AppErrorMessage';\r\n\r\nfunction FormImagePicker({ name }) {\r\n  const { values, errors, touched, setFieldValue } = useFormikContext();\r\n\r\n  const handleAddImage = (uri) => {\r\n    if (values[name].includes(uri)) return alert('photo is duplicated');\r\n    setFieldValue(name, [...values[name], uri]);\r\n  };\r\n\r\n  const handleRemoveImage = (uri) => {\r\n    setFieldValue(\r\n      name,\r\n      values[name].filter((imgUri) => {\r\n        return imgUri !== uri;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ImageInputList\r\n        imageUris={values[name]}\r\n        onAddImage={handleAddImage}\r\n        onRemoveImage={handleRemoveImage}\r\n      />\r\n      <AppErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormImagePicker;\r\n"]},"metadata":{},"sourceType":"module"}
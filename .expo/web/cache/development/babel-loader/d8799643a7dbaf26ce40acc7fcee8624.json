{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tuong\\\\Documents\\\\projects\\\\nodejs\\\\react-native\\\\React-Native\\\\app\\\\components\\\\forms\\\\AppFormField.js\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\nimport AppErrorMessage from \"./AppErrorMessage\";\nimport AppTextInput from \"../AppTextInput\";\n\nfunction AppFormField(_ref) {\n  var name = _ref.name,\n      width = _ref.width,\n      props = _objectWithoutProperties(_ref, [\"name\", \"width\"]);\n\n  var _useFormikContext = useFormikContext(),\n      setFieldTouched = _useFormikContext.setFieldTouched,\n      handleChange = _useFormikContext.handleChange,\n      errors = _useFormikContext.errors,\n      touched = _useFormikContext.touched;\n\n  return React.createElement(React.Fragment, null, React.createElement(AppTextInput, _extends({\n    onBlur: function onBlur() {\n      setFieldTouched(name);\n    },\n    onChangeText: handleChange(name),\n    width: width\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  })), React.createElement(AppErrorMessage, {\n    error: errors[name],\n    visible: touched[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AppFormField;","map":{"version":3,"sources":["C:/Users/Tuong/Documents/projects/nodejs/react-native/React-Native/app/components/forms/AppFormField.js"],"names":["useFormikContext","React","AppErrorMessage","AppTextInput","AppFormField","name","width","props","setFieldTouched","handleChange","errors","touched"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP;AACA,OAAOC,YAAP;;AAGA,SAASC,YAAT,OAA+C;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAARC,KAAQ;;AAAA,0BACYP,gBAAgB,EAD5B;AAAA,MACtCQ,eADsC,qBACtCA,eADsC;AAAA,MACrBC,YADqB,qBACrBA,YADqB;AAAA,MACPC,MADO,qBACPA,MADO;AAAA,MACCC,OADD,qBACCA,OADD;;AAE7C,SACE,0CACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAE,kBAAM;AACZH,MAAAA,eAAe,CAACH,IAAD,CAAf;AACD,KAHH;AAIE,IAAA,YAAY,EAAEI,YAAY,CAACJ,IAAD,CAJ5B;AAKE,IAAA,KAAK,EAAEC;AALT,KAMMC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EASE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEG,MAAM,CAACL,IAAD,CAA9B;AAAsC,IAAA,OAAO,EAAEM,OAAO,CAACN,IAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD;;AAED,eAAeD,YAAf","sourcesContent":["import { useFormikContext } from \"formik\";\r\nimport React from \"react\";\r\nimport AppErrorMessage from \"./AppErrorMessage\";\r\nimport AppTextInput from \"../AppTextInput\";\r\n\r\n\r\nfunction AppFormField({name, width, ...props}) {\r\n  const {setFieldTouched, handleChange, errors, touched} = useFormikContext();\r\n  return (\r\n    <>\r\n      <AppTextInput\r\n        onBlur={() => {\r\n          setFieldTouched(name);\r\n        }}\r\n        onChangeText={handleChange(name)}\r\n        width={width}\r\n        {...props}\r\n      />\r\n      <AppErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppFormField;\r\n"]},"metadata":{},"sourceType":"module"}
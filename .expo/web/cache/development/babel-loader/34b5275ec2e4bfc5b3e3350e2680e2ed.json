{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tuong\\\\Documents\\\\projects\\\\nodejs\\\\react-native\\\\React-Native\\\\app\\\\components\\\\ImageInput.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"./Icon\";\n\nfunction ImageInput(_ref) {\n  var imageUri = _ref.imageUri,\n      onPress = _ref.onPress;\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert('You need to enable to access your photos');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var handleSelectImage = function handleSelectImage() {\n    var result;\n    return _regeneratorRuntime.async(function handleSelectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!imageUri) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", onPress(imageUri));\n\n          case 2:\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 0.5\n            }));\n\n          case 5:\n            result = _context2.sent;\n            if (!result.cancelled) onPress(result.uri);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            alert(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: styles.container,\n    onPress: handleSelectImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, imageUri ? React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.image,\n    key: imageUri,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }) : React.createElement(Icon, {\n    name: \"camera\",\n    backgroundColor: \"transparent\",\n    size: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ddd',\n    width: 100,\n    height: 100,\n    borderRadius: 20,\n    marginRight: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});\nexport default ImageInput;","map":{"version":3,"sources":["C:/Users/Tuong/Documents/projects/nodejs/react-native/React-Native/app/components/ImageInput.js"],"names":["ImagePicker","React","useEffect","Icon","ImageInput","imageUri","onPress","requestPermission","requestCameraPermissionsAsync","granted","alert","handleSelectImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","uri","styles","container","image","StyleSheet","create","backgroundColor","width","height","borderRadius","marginRight","justifyContent","alignItems","overflow"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,IAAP;;AAEA,SAASC,UAAT,OAA2C;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACzC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEP,WAAW,CAACQ,6BAAZ,EADF;;AAAA;AAAA;AAChBC,YAAAA,OADgB,yBAChBA,OADgB;AAExB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,0CAAD,CAAL;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAKAR,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACpBN,QADoB;AAAA;AAAA;AAAA;;AAAA,8CACHC,OAAO,CAACD,QAAD,CADJ;;AAAA;AAAA;AAAA;AAAA,6CAGDL,WAAW,CAACY,uBAAZ,CAAoC;AACvDC,cAAAA,UAAU,EAAEb,WAAW,CAACc,gBAAZ,CAA6BC,MADc;AAEvDC,cAAAA,OAAO,EAAE;AAF8C,aAApC,CAHC;;AAAA;AAGhBC,YAAAA,MAHgB;AAOtB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuBZ,OAAO,CAACW,MAAM,CAACE,GAAR,CAAP;AAPD;AAAA;;AAAA;AAAA;AAAA;AAStBT,YAAAA,KAAK,cAAL;;AATsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAYA,SACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEU,MAAM,CAACC,SAAhC;AAA2C,IAAA,OAAO,EAAEV,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QAAQ,GACP,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEc,MAAAA,GAAG,EAAEd;AAAP,KAAf;AAAkC,IAAA,KAAK,EAAEe,MAAM,CAACE,KAAhD;AAAuD,IAAA,GAAG,EAAEjB,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGP,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,eAAe,EAAC,aAApC;AAAkD,IAAA,IAAI,EAAE,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AASD;;AAED,IAAMe,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,eAAe,EAAE,MADR;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,MAAM,EAAE,GAHC;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,cAAc,EAAE,QANP;AAOTC,IAAAA,UAAU,EAAE,QAPH;AAQTC,IAAAA,QAAQ,EAAE;AARD,GADoB;AAW/BV,EAAAA,KAAK,EAAE;AACLI,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE;AAFH;AAXwB,CAAlB,CAAf;AAiBA,eAAevB,UAAf","sourcesContent":["import * as ImagePicker from 'expo-image-picker';\r\nimport React, { useEffect } from 'react';\r\nimport { Image, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport Icon from './Icon';\r\n\r\nfunction ImageInput({ imageUri, onPress }) {\r\n  const requestPermission = async () => {\r\n    const { granted } = await ImagePicker.requestCameraPermissionsAsync();\r\n    if (!granted) alert('You need to enable to access your photos');\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestPermission();\r\n  }, []);\r\n\r\n  const handleSelectImage = async () => {\r\n    if (imageUri) return onPress(imageUri);\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        quality: 0.5,\r\n      });\r\n      if (!result.cancelled) onPress(result.uri);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <TouchableOpacity style={styles.container} onPress={handleSelectImage}>\r\n      {imageUri ? (\r\n        <Image source={{ uri: imageUri }} style={styles.image} key={imageUri} />\r\n      ) : (\r\n        <Icon name=\"camera\" backgroundColor=\"transparent\" size={80} />\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#ddd',\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 20,\r\n    marginRight: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n});\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}